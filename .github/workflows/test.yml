name: test
on:
  - push
  - pull_request
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.16.0, 20.x]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rate_limiter
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: rate_limiter
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        run: npm install

      - name: Run tests
        run: npm test
        env:
          PG_HOST: 0.0.0.0
          PG_PORT: 5432
          PG_USER: postgres
          PG_PASSWORD: postgres
          MYSQL_HOST: 0.0.0.0
          MYSQL_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: ''
          REDIS_HOST: 0.0.0.0
          REDIS_PORT: 6379
          DB_NAME: rate_limiter

  lint:
    uses: adonisjs/.github/.github/workflows/lint.yml@main

  typecheck:
    uses: adonisjs/.github/.github/workflows/typecheck.yml@main
